{"version":3,"sources":["icon-button.js","image-source.js","hardcoded-source.js","utils.js","floating-menus.js","full-screen-button.js","sticker.js","sticky-scene.js","index.js"],"names":["IconButton","props","state","toggled","buttonPressed","bind","buttonReleased","this","setState","buttonClassName","className","role","onClick","onMouseDown","onMouseUp","onMouseLeave","src","toggledIcon","icon","alt","draggable","React","Component","ABSTRACT_METHOD_ERROR_TEXT","ImageSource","TypeError","sceneID","stickerID","pageWidth","window","innerWidth","pageHeight","innerHeight","sceneThumbWidth","calcSceneThumbWidth","sceneThumbHeight","stickerThumbWidth","stickerThumbHeight","stickerWidth","stickerHeight","availScenes","sceneStickersMap","imageSource","map","imageID","id","path","SCENES_IMAGES_PATH","sceneOnly","thumbs","sceneImageID","concat","process","mouseEvents","type","listener","elemMouseButtonDown","elemMouseMoved","elemMouseButtonUp","touchEvents","event","preventDefault","element","target","touch","targetTouches","setAttribute","identifier","sendCustomDragEvent","handleTouchMotionEvent","elemInteractCancelled","validateElement","ReferenceError","Element","handleRegUnreg","listenerFunc","forEach","TouchEvent","detailSource","eventInit","detail","pageX","pageY","dispatchEvent","CustomEvent","button","buttons","touchesList","hasToRemoveAttr","touchID","getAttribute","found","index","length","stopPropagation","removeAttribute","DragDropService","registerDragEvents","addEventListener","unregisterDragEvents","removeEventListener","TOUCH_ID_ATTR","DRAG_START_EVENT_TYPE","DRAG_MOVE_EVENT_TYPE","DRAG_END_EVENT_TYPE","DRAG_CANCEL_EVENT_TYPE","OPTIONS_MENU_ICONS","FloatingMenus","shown","sceneSelection","toggleMenus","handleMenuOptionClick","handleNewSceneSelect","handleStickerSelect","currentTarget","onMenuItemClick","sendThumbClickEvent","thumbID","menuEvent","verticalMenuArray","verticalMenu","key","getScenesThumbs","thumb","style","width","height","interactive","arrow","offset","visible","placement","theme","content","maxWidth","getStickersThumbs","FullScreenButton","isFullScrMode","fullscrModeChanged","buttonClicked","fullscreen","fullscreenEnabled","fullscreenElement","requestFullscreen","document","documentElement","exitFullscreen","Sticker","createRef","coordX","coordY","dragEvents","controllerPressed","controllerMoved","controllerReleased","controllerLeft","current","hasAttribute","dragging","bounds","getBoundingClientRect","originX","left","originY","top","updatePosition","getStickerImage","ref","position","StickyScene","stickers","sceneTouchMoved","sceneTouchEnded","menuItemClicked","changedTouches","handleTouchEvent","push","getSceneImage","onTouchMove","onTouchEnd","sticker","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.cac05bd6.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default class IconButton extends React.Component\r\n{\r\n\tconstructor(props)\r\n\t{\r\n\t\tsuper(props); this.state={ };\r\n\t\tif (!(\"toggled\" in props)) this.state.toggled=false;\r\n\t\tthis.buttonPressed=this.buttonPressed.bind(this);\r\n\t\tthis.buttonReleased=this.buttonReleased.bind(this);\r\n\t}\r\n\t\r\n\tbuttonPressed()\r\n\t{ if (!(\"toggled\" in this.props)) this.setState({ toggled: true }); }\r\n\t\r\n\tbuttonReleased()\r\n\t{ if (!(\"toggled\" in this.props)) this.setState({ toggled: false }); }\r\n\t\r\n\trender()\r\n\t{\r\n\t\tlet buttonClassName=\"pseudo-button icon-wrapper\",toggled;\r\n\t\tif (\"toggled\" in this.props) toggled=this.props.toggled;\r\n\t\telse toggled=this.state.toggled;\r\n\t\tif (toggled) buttonClassName+=\" toggled\";\r\n\t\telse buttonClassName+=\" untoggled\";\r\n\t\tif (\"className\" in this.props)\r\n\t\t\tbuttonClassName+=\" \" + this.props.className;\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<div className={buttonClassName} role=\"button\" onClick={this.props.onClick}\r\n\t\t\t\tonMouseDown={this.buttonPressed} onMouseUp={this.buttonReleased}\r\n\t\t\t\tonMouseLeave={this.buttonReleased}>\r\n\t\t\t\t<img src={!toggled?this.props.icon:(\"toggledIcon\" in this.props?\r\n\t\t\t\t\tthis.props.toggledIcon:this.props.icon)} alt={this.props.alt}\r\n\t\t\t\t\tclassName=\"w-100 h-100\" draggable={false}/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","\r\nconst ABSTRACT_METHOD_ERROR_TEXT=\"Prototype methods can't be called from \" + \r\n\t\t\"instances of the base class!\";\r\n\r\nexport default class ImageSource\r\n{\t\r\n\tgetScenesThumbs() { throw new TypeError(ABSTRACT_METHOD_ERROR_TEXT); }\r\n\tgetSceneImage(sceneID) { throw new TypeError(ABSTRACT_METHOD_ERROR_TEXT); }\r\n\tgetStickerImage(stickerID) { throw new TypeError(ABSTRACT_METHOD_ERROR_TEXT); }\r\n\t\r\n\tgetStickersThumbs(sceneID,sceneOnly=true)\r\n\t{ throw new TypeError(ABSTRACT_METHOD_ERROR_TEXT); }\r\n}\r\n\r\nconst pageWidth=getPageWidth(),pageHeight=getPageHeight();\r\nImageSource.pageWidth=pageWidth; ImageSource.pageHeight=pageHeight;\r\n\r\nImageSource.sceneThumbWidth=calcSceneThumbWidth(pageWidth);\r\nImageSource.sceneThumbHeight=ImageSource.sceneThumbWidth*(pageHeight/pageWidth);\r\n\r\nImageSource.stickerThumbWidth=ImageSource.sceneThumbWidth/2;\r\nImageSource.stickerThumbHeight=ImageSource.stickerThumbWidth;\r\n\r\n//Not supposed to be constant - remove when implementing size mapping!\r\nImageSource.stickerWidth=ImageSource.stickerThumbWidth;\r\nImageSource.stickerHeight=ImageSource.stickerThumbHeight;\r\n\r\nfunction getPageWidth() { return window.innerWidth; }\r\nfunction getPageHeight() { return window.innerHeight; }\r\n\r\nfunction calcSceneThumbWidth(pageWidth)\r\n{\r\n\tif (pageWidth<1200) return 128;\r\n\telse return 192;\r\n}\r\n","import ImageSource from \"./image-source.js\";\r\n\r\nconst SCENES_IMAGES_PATH=process.env.PUBLIC_URL + \"/hardcoded/scenes/\";\r\nconst SCENES_THUMBS_PATH=SCENES_IMAGES_PATH + \"thumbs/\";\r\n\r\nconst STICKERS_IMAGES_PATH=process.env.PUBLIC_URL + \"/hardcoded/stickers/\";\r\nconst STICKERS_THUMBS_PATH=STICKERS_IMAGES_PATH;\r\n\r\nconst availScenes=[\"underwater-treasures\",\"space-cosmonaut\"];\r\nconst sceneStickersMap= //For scaling, add a subpath\r\n{ \r\n\t\"underwater-treasures\": [\"blue-black-fish\",\"dory-fish\",\"submarine\",\"seahorse\"],\r\n\t\"space-cosmonaut\": [\"rocket-spaceship\",\"alien-flying-saucer\"]\r\n}\r\n\r\n//TODO: Map to size and add suffix to file names\r\nexport default class HardcodedImageSource extends ImageSource\r\n{\r\n\tgetScenesThumbs()\r\n\t{\t\r\n\t\treturn availScenes.map(imageID => \r\n\t\t({ id: imageID, path: SCENES_THUMBS_PATH + imageID + \".jpg\" }));\r\n\t}\r\n\t\r\n\tgetStickersThumbs(sceneID,sceneOnly=true)\r\n\t{\r\n\t\tlet thumbs=sceneStickersMap[sceneID]; if (!thumbs) thumbs=[];\r\n\t\tif (!sceneOnly)\r\n\t\t{\r\n\t\t\tfor (let sceneImageID in sceneStickersMap)\r\n\t\t\t{\r\n\t\t\t\tif (sceneImageID!==sceneID)\r\n\t\t\t\t\tthumbs=thumbs.concat(sceneStickersMap[sceneImageID]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn thumbs.map(imageID => \r\n\t\t({ id: imageID, path: STICKERS_THUMBS_PATH + imageID + \".jpg\" }));\r\n\t}\r\n\t\r\n\tgetSceneImage(sceneID) { return SCENES_IMAGES_PATH + sceneID + \".jpg\"; }\r\n\tgetStickerImage(stickerID) { return STICKERS_IMAGES_PATH + stickerID + \".jpg\"; }\r\n}\r\n","import HardcodedImageSource from \"./hardcoded-source.js\";\r\nconst imageSource=new HardcodedImageSource();\r\n\r\n//Only these drag event types are needed for the application\r\nconst DRAG_START_EVENT_TYPE=\"dragdropstart\",DRAG_MOVE_EVENT_TYPE=\"dragdropmove\";\r\nconst DRAG_END_EVENT_TYPE=\"dragdropend\",DRAG_CANCEL_EVENT_TYPE=\"dragdropcancel\";\r\nconst MAIN_MOUSE_BUTTON=0,MAIN_MOUSE_BUTTON_FLAG=1,TOUCH_ID_ATTR=\"data-touch\";\r\n\r\nconst mouseEvents=[\r\n{ type: \"mousedown\", listener: elemMouseButtonDown },\r\n{ type: \"mousemove\", listener: elemMouseMoved },\r\n{ type: \"mouseup\", listener: elemMouseButtonUp },\r\n{ type: \"mouseleave\", listener: elemMouseMoved }];\r\n\r\nconst pointerEvents=[\r\n{ type: \"pointerdown\", listener: elemPointerDown },\r\n{ type: \"pointermove\", listener: elemPointerMoved },\r\n{ type: \"pointerup\", listener: elemPointerUp },\r\n{ type: \"pointerleave\", listener: elemPointerMoved },\r\n{ type: \"pointercancel\", listener: elemInteractCancelled }];\r\n\r\nconst touchEvents=[\r\n{ type: \"touchstart\", listener: elemTouchStarted },\r\n{ type: \"touchmove\", listener: elemTouchMoved },\r\n{ type: \"touchend\", listener: elemTouchEnded },\r\n{ type: \"touchcancel\", listener: elemInteractCancelled }];\r\n\r\nfunction validateElement(element)\r\n{\r\n\tif (!element) throw new ReferenceError(\"A DOM element must be supplied!\");\r\n\telse if (!(element instanceof Element))\r\n\t\tthrow new TypeError(\"The parameter supplied must be a DOM element!\");\r\n}\r\n\r\nfunction handleRegUnreg(element,listenerFunc)\r\n{\r\n\t/*if (window.PointerEvent)\r\n\t\tpointerEvents.forEach(event => listenerFunc(event.type,event.listener));\r\n\telse\r\n\t{*/\r\n\t\tmouseEvents.forEach(event => listenerFunc(event.type,event.listener));\r\n\t\tif (window.TouchEvent)\r\n\t\t\ttouchEvents.forEach(event => listenerFunc(event.type,event.listener));\r\n\t//}\r\n}\r\n\r\nfunction registerDragEvents(element)\r\n{\r\n\tvalidateElement(element); element.draggable=false;\r\n\thandleRegUnreg(element,element.addEventListener);\r\n}\r\n\r\nfunction unregisterDragEvents(element)\r\n{\r\n\tvalidateElement(element);\r\n\thandleRegUnreg(element,element.removeEventListener);\r\n}\r\n\r\nfunction sendCustomDragEvent(element,type,detailSource)\r\n{\r\n\tlet eventInit;\r\n\tif (detailSource)\r\n\t{\r\n\t\teventInit=\r\n\t\t//Only these properties are needed in the application\r\n\t\t{ detail: { pageX: detailSource.pageX, pageY: detailSource.pageY } };\r\n\t}\r\n\telement.dispatchEvent(new CustomEvent(type,eventInit));\r\n}\r\n\r\nfunction elemMouseButtonDown(event)\r\n{\r\n\tif (event.button===MAIN_MOUSE_BUTTON) \r\n\t\tsendCustomDragEvent(event.target,DRAG_START_EVENT_TYPE,event);\r\n}\r\n\r\nfunction elemMouseMoved(event)\r\n{\r\n\tif ((event.buttons & MAIN_MOUSE_BUTTON_FLAG)!==0)\r\n\t\tsendCustomDragEvent(event.target,DRAG_MOVE_EVENT_TYPE,event);\r\n}\r\n\r\nfunction elemMouseButtonUp(event)\r\n{\r\n\tif (event.button===MAIN_MOUSE_BUTTON)\r\n\t\tsendCustomDragEvent(event.target,DRAG_END_EVENT_TYPE,event);\r\n}\r\n\r\nfunction handlePointerEvent(event,type,mouseEventFunc)\r\n{\r\n\tif (event.isPrimary)\r\n\t{\r\n\t\tif (event.pointerType===\"mouse\") mouseEventFunc(event);\r\n\t\telse sendCustomDragEvent(event.target,type,event);\r\n\t}\r\n}\r\n\r\nfunction elemPointerDown(event)\r\n{ handlePointerEvent(event,DRAG_START_EVENT_TYPE,elemMouseButtonDown); }\r\n\r\nfunction elemPointerMoved(event) \r\n{ handlePointerEvent(event,DRAG_MOVE_EVENT_TYPE,elemMouseMoved); }\r\n\r\nfunction elemPointerUp(event)\r\n{ handlePointerEvent(event,DRAG_END_EVENT_TYPE,elemMouseButtonUp); }\r\n\r\nfunction elemTouchStarted(event)\r\n{\r\n\tevent.preventDefault(); //Prevent mouse events from firing\r\n\tconst element=event.target,touch=event.targetTouches[0];\r\n\telement.setAttribute(TOUCH_ID_ATTR,touch.identifier);\r\n\tsendCustomDragEvent(element,DRAG_START_EVENT_TYPE,touch);\r\n}\r\n\r\nfunction handleTouchMotionEvent(event,type,touchesList,hasToRemoveAttr)\r\n{\r\n\tevent.preventDefault();\r\n\tconst element=event.target,touchID=element.getAttribute(TOUCH_ID_ATTR);\r\n\tif (touchID)\r\n\t{\r\n\t\tlet found=false,index=0;\r\n\t\twhile ((!found)&&(index<event[touchesList].length))\r\n\t\t{\r\n\t\t\tif (event[touchesList][index].identifier===touchID) found=true;\r\n\t\t\telse index++;\r\n\t\t}\r\n\t\tif (found)\r\n\t\t{\r\n\t\t\tevent.stopPropagation();\r\n\t\t\tif (hasToRemoveAttr) element.removeAttribute(TOUCH_ID_ATTR);\r\n\t\t\tsendCustomDragEvent(element,type,event[touchesList][index]);\r\n\t\t}\r\n\t\telse elemInteractCancelled(event);\r\n\t}\r\n}\r\n\r\nfunction elemTouchMoved(event)\r\n{ handleTouchMotionEvent(event,DRAG_MOVE_EVENT_TYPE,\"changedTouches\"); }\r\n\r\nfunction elemTouchEnded(event)\r\n{ handleTouchMotionEvent(event,DRAG_END_EVENT_TYPE,\"changedTouches\",true); }\r\n\r\nfunction elemInteractCancelled(event)\r\n{\r\n\tconst element=event.target;\r\n\telement.removeAttribute(TOUCH_ID_ATTR);\r\n\tsendCustomDragEvent(element,DRAG_CANCEL_EVENT_TYPE);\r\n}\r\n\r\nconst DragDropService=\r\n{ \r\n\tregisterDragEvents,unregisterDragEvents,sendCustomDragEvent,TOUCH_ID_ATTR,\r\n\tDRAG_START_EVENT_TYPE,DRAG_MOVE_EVENT_TYPE,DRAG_END_EVENT_TYPE,\r\n\tDRAG_CANCEL_EVENT_TYPE\r\n};\r\nexport { imageSource, DragDropService };\r\n","import React from \"react\";\r\nimport Tippy from \"@tippyjs/react\";\r\n\r\nimport IconButton from \"./icon-button.js\";\r\nimport ImageSource from \"./image-source.js\";\r\nimport { imageSource } from \"./utils.js\";\r\n\r\nconst OPTIONS_MENU_ICONS=[\"newscene\",\"loadscene\",\"savescene\"];\r\n\r\nexport default class FloatingMenus extends React.Component\r\n{\r\n\tconstructor(props)\r\n\t{ \r\n\t\tsuper(props); this.state={ shown: false, sceneSelection: false };\r\n\t\tthis.toggleMenus=this.toggleMenus.bind(this);\r\n\t\tthis.handleMenuOptionClick=this.handleMenuOptionClick.bind(this);\r\n\t\tthis.handleNewSceneSelect=this.handleNewSceneSelect.bind(this);\r\n\t\tthis.handleStickerSelect=this.handleStickerSelect.bind(this);\r\n\t}\r\n\t\r\n\ttoggleMenus()\r\n\t{ \r\n\t\tthis.setState(state => \r\n\t\t({ shown: !this.state.shown, sceneSelection: false }));\r\n\t}\r\n\t\r\n\thandleMenuOptionClick(event)\r\n\t{\r\n\t\tswitch (event.currentTarget.id)\r\n\t\t{ \r\n\t\t\tcase \"newscene\": this.setState({ sceneSelection: true }); break;\r\n\t\t\tcase \"menuback\": this.setState({ sceneSelection: false }); break;\r\n\t\t\tdefault:\r\n\t\t\t\tthis.props.onMenuItemClick(new CustomEvent(event.currentTarget.id));\r\n\t\t\t\tthis.setState({ shown: false });\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\t\r\n\thandleNewSceneSelect(event)\r\n\t{\r\n\t\tthis.sendThumbClickEvent(\"newscene\",event.currentTarget.id);\r\n\t\tthis.setState({ shown: false, sceneSelection: false });\r\n\t}\r\n\t\r\n\thandleStickerSelect(event)\r\n\t{ this.sendThumbClickEvent(\"addsticker\",event.currentTarget.id); }\r\n\t\r\n\tsendThumbClickEvent(type,thumbID)\r\n\t{\r\n\t\tconst menuEvent=new CustomEvent(type,{ detail: { imageID: thumbID } });\r\n\t\tthis.props.onMenuItemClick(menuEvent);\r\n\t}\r\n\t\r\n\trender()\r\n\t{\r\n\t\tlet verticalMenuArray=(this.state.sceneSelection?[\"menuback\"]:OPTIONS_MENU_ICONS);\r\n\t\tlet verticalMenu=verticalMenuArray.map(icon => \r\n\t\t\t<div className=\"menu-item icon-wrapper my-1\" id={icon} key={icon}\r\n\t\t\t\tonClick={this.handleMenuOptionClick}>\r\n\t\t\t\t<img src={process.env.PUBLIC_URL + \"/icons/\" + icon + \".svg\"}\r\n\t\t\t\t\talt=\"Menu Option\" className=\"w-100 h-100\"/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t\t\r\n\t\tif (this.state.sceneSelection)\r\n\t\t{\r\n\t\t\tverticalMenuArray=imageSource.getScenesThumbs();\r\n\t\t\tverticalMenu=verticalMenu.concat(verticalMenuArray.map(thumb => \r\n\t\t\t\t<div className=\"menu-item scene-item\" id={thumb.id} key={thumb.id}\r\n\t\t\t\t\tonClick={this.handleNewSceneSelect} style={\r\n\t\t\t\t{\r\n\t\t\t\t\twidth: ImageSource.sceneThumbWidth,\r\n\t\t\t\t\theight: ImageSource.sceneThumbHeight\r\n\t\t\t\t}}>\r\n\t\t\t\t\t<img src={thumb.path} alt=\"Scene Thumb\" className=\"w-100 h-100\"/>\r\n\t\t\t\t</div>\r\n\t\t\t));\r\n\t\t}\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<Tippy interactive={true} arrow={false} offset={[0,0]} visible={this.state.shown}\r\n\t\t\t\tplacement=\"bottom-start\" className=\"floating-menu vertical-floating-menu\"\r\n\t\t\t\ttheme=\"light\" content={verticalMenu}>\r\n\t\t\t\t\r\n\t\t\t\t<Tippy interactive={true} arrow={false} offset={[0,0]} visible={this.state.shown}\r\n\t\t\t\t\tplacement=\"left-start\" theme=\"light\" maxWidth=\"none\"\r\n\t\t\t\t\tclassName=\"floating-menu\" content=\r\n\t\t\t\t\t{\t\r\n\t\t\t\t\t\timageSource.getStickersThumbs(this.props.sceneID).map(thumb => \r\n\t\t\t\t\t\t<img src={thumb.path} alt=\"Sticker Thumb\" onClick={this.handleStickerSelect}\r\n\t\t\t\t\t\t\tclassName=\"menu-item sticker-item\" key={thumb.id} id={thumb.id} style={\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\twidth: ImageSource.stickerThumbWidth,\r\n\t\t\t\t\t\t\theight: ImageSource.stickerThumbHeight\r\n\t\t\t\t\t\t}}/>\r\n\t\t\t\t\t)}>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<span className=\"menu-toggle\">\r\n\t\t\t\t\t\t<IconButton icon={process.env.PUBLIC_URL + \"/icons/menus.svg\"} alt=\"Menus\"\r\n\t\t\t\t\t\t\ttoggled={this.state.shown} onClick={this.toggleMenus}/>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</Tippy>\r\n\t\t\t</Tippy>\r\n\t\t);\r\n\t}\r\n}\r\n","import React from \"react\";\r\nimport fullscreen from \"fscreen\";\r\nimport IconButton from \"./icon-button.js\";\r\n\r\nexport default class FullScreenButton extends React.Component\r\n{\r\n\tconstructor(props) \r\n\t{\r\n\t\tsuper(props); this.state={ isFullScrMode: false }\r\n\t\tthis.fullscrModeChanged=this.fullscrModeChanged.bind(this);\r\n\t\tthis.buttonClicked=this.buttonClicked.bind(this);\r\n\t}\r\n\t\r\n\tcomponentDidMount()\r\n\t{\r\n\t\tif (fullscreen.fullscreenEnabled)\r\n\t\t\tfullscreen.addEventListener(\"fullscreenchange\",this.fullscrModeChanged);\r\n\t}\r\n\t\r\n\tcomponentWillUnmount()\r\n\t{\r\n\t\tif (fullscreen.fullscreenEnabled)\r\n\t\t\tfullscreen.removeEventListener(\"fullscreenchange\",this.fullscrModeChanged);\r\n\t}\r\n\t\r\n\tfullscrModeChanged()\r\n\t{ this.setState({ isFullScrMode: (fullscreen.fullscreenElement!==null) }); }\r\n\t\r\n\tbuttonClicked()\r\n\t{\r\n\t\tif (fullscreen.fullscreenElement===null)\r\n\t\t\tfullscreen.requestFullscreen(document.documentElement);\r\n\t\telse fullscreen.exitFullscreen();\r\n\t}\r\n\t\r\n\trender()\r\n\t{\r\n\t\treturn (\r\n\t\t\t<IconButton alt=\"Fullscreen Mode\" onClick={this.buttonClicked}\r\n\t\t\t\tclassName={\"full-screen-button\" + (!fullscreen.fullscreenEnabled?\" d-none\":\"\")}\r\n\t\t\t\ticon={process.env.PUBLIC_URL + \"/icons/\" + (this.state.isFullScrMode?\r\n\t\t\t\t\"exitfullscr\":\"fullscreen\") + \".svg\"}/>\r\n\t\t);\r\n\t}\r\n}\r\n","import React from \"react\";\r\nimport ImageSource from \"./image-source.js\";\r\nimport { imageSource, DragDropService } from \"./utils.js\";\r\n\r\nexport default class Sticker extends React.Component\r\n{\r\n\tconstructor(props)\r\n\t{\r\n\t\tsuper(props); this.element=React.createRef();\r\n\t\tthis.state=\r\n\t\t{ \r\n\t\t\tcoordX: (window.innerWidth-ImageSource.stickerWidth)/2,\r\n\t\t\tcoordY: (window.innerHeight-ImageSource.stickerHeight)/2\r\n\t\t};\r\n\t\t\r\n\t\tthis.dragEvents=[\r\n\t\t{ \r\n\t\t\ttype: DragDropService.DRAG_START_EVENT_TYPE,\r\n\t\t\tlistener: this.controllerPressed.bind(this)\r\n\t\t},\r\n\t\t{\r\n\t\t\ttype: DragDropService.DRAG_MOVE_EVENT_TYPE,\r\n\t\t\tlistener: this.controllerMoved.bind(this)\r\n\t\t},\r\n\t\t{\r\n\t\t\ttype: DragDropService.DRAG_END_EVENT_TYPE,\r\n\t\t\tlistener: this.controllerReleased.bind(this)\r\n\t\t},\r\n\t\t{\r\n\t\t\ttype: DragDropService.DRAG_CANCEL_EVENT_TYPE,\r\n\t\t\tlistener: this.controllerLeft.bind(this)\r\n\t\t}];\r\n\t}\r\n\t\r\n\tcomponentDidMount() \r\n\t{\r\n\t\tconst element=this.element.current;\r\n\t\tthis.dragEvents.forEach(event => element.addEventListener(event.type,\r\n\t\t\t\tevent.listener));\r\n\t\tif (this.touchID)\r\n\t\t{\r\n\t\t\telement.setAttribute(DragDropService.TOUCH_ID_ATTR,this.touchID);\r\n\t\t\tdelete this.touchID;\r\n\t\t}\r\n\t\tDragDropService.registerDragEvents(element);\r\n\t}\r\n\t\r\n\tcomponentWillUnmount()\r\n\t{\r\n\t\tconst element=this.element.current;\r\n\t\tDragDropService.unregisterDragEvents(element);\r\n\t\tthis.dragEvents.forEach(event => element.removeEventListener(event.type,\r\n\t\t\t\tevent.listener));\r\n\t\tif (element.hasAttribute(DragDropService.TOUCH_ID_ATTR))\r\n\t\t\tthis.touchID=element.getAttribute(DragDropService.TOUCH_ID_ATTR);\r\n\t}\r\n\t\r\n\tcontrollerPressed(event)\r\n\t{\r\n\t\tif (!this.dragging)\r\n\t\t{\r\n\t\t\tconst bounds=this.element.current.getBoundingClientRect();\r\n\t\t\tthis.dragging=\r\n\t\t\t{ \r\n\t\t\t\toriginX: event.detail.pageX-bounds.left,\r\n\t\t\t\toriginY: event.detail.pageY-bounds.top\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n\t\r\n\tcontrollerMoved(event) { if (this.dragging) this.updatePosition(event); }\r\n\tcontrollerLeft() { if (this.dragging) delete this.dragging; }\r\n\t\r\n\tcontrollerReleased(event)\r\n\t{ \r\n\t\tif (this.dragging) \r\n\t\t{ \r\n\t\t\tthis.updatePosition(event); delete this.dragging;\r\n\t\t\tconst element=this.element.current;\r\n\t\t\tthis.setState({ coordX: element.style.left, coordY: element.style.top });\r\n\t\t}\r\n\t}\r\n\t\r\n\tupdatePosition(event)\r\n\t{\r\n\t\tconst element=this.element.current;\r\n\t\telement.style.left=(event.detail.pageX-this.dragging.originX) + \"px\";\r\n\t\telement.style.top=(event.detail.pageY-this.dragging.originY) + \"px\";\r\n\t}\r\n\t\r\n\trender()\r\n\t{\r\n\t\treturn (\r\n\t\t\t<img src={imageSource.getStickerImage(this.props.stickerID)} alt=\"Sticker\"\r\n\t\t\t\tdraggable={false} ref={this.element} style={\r\n\t\t\t{\r\n\t\t\t\t//TODO: Get dimensions from image data / file name\r\n\t\t\t\twidth: ImageSource.stickerWidth, height: ImageSource.stickerHeight,\r\n\t\t\t\tposition: \"absolute\", left: this.state.coordX, top: this.state.coordY\r\n\t\t\t}}/>\r\n\t\t);\r\n\t}\r\n}\r\n","import React from \"react\";\r\nimport FloatingMenus from \"./floating-menus.js\";\r\nimport FullScreenButton from \"./full-screen-button.js\";\r\nimport Sticker from \"./sticker.js\";\r\nimport { imageSource, DragDropService } from \"./utils.js\";\r\n\r\nexport default class StickyScene extends React.Component\r\n{\r\n\tconstructor(props)\r\n\t{ \r\n\t\tsuper(props); \r\n\t\tthis.state={ sceneID: \"underwater-treasures\", stickers: [] };\r\n\t\tthis.sceneTouchMoved=this.sceneTouchMoved.bind(this);\r\n\t\tthis.sceneTouchEnded=this.sceneTouchEnded.bind(this);\r\n\t\tthis.menuItemClicked=this.menuItemClicked.bind(this);\r\n\t}\r\n\t\r\n\thandleTouchEvent(event,type)\r\n\t{\r\n\t\tfor (let touch of event.changedTouches)\r\n\t\t{\r\n\t\t\tconst element=touch.target;\r\n\t\t\tif (element.hasAttribute(DragDropService.TOUCH_ID_ATTR))\r\n\t\t\t\tDragDropService.sendCustomDragEvent(element,type,touch);\r\n\t\t}\r\n\t}\r\n\t\r\n\tsceneTouchMoved(event)\r\n\t{ this.handleTouchEvent(event,DragDropService.DRAG_MOVE_EVENT_TYPE); }\r\n\t\r\n\tsceneTouchEnded(event)\r\n\t{ this.handleTouchEvent(event,DragDropService.DRAG_END_EVENT_TYPE); }\r\n\t\r\n\tmenuItemClicked(event)\r\n\t{\r\n\t\tswitch (event.type)\r\n\t\t{\r\n\t\t\tcase \"newscene\":\r\n\t\t\t\tthis.setState({ sceneID: event.detail.imageID, stickers: [] });\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"addsticker\":\r\n\t\t\t\t//Array.concat is wasteful!\r\n\t\t\t\tthis.state.stickers.push(event.detail.imageID);\r\n\t\t\t\tthis.setState(state => ({ stickers: state.stickers }));\r\n\t\t\t\tbreak;\r\n\t\t\tdefault: break;\r\n\t\t}\r\n\t}\r\n\t\r\n\trender()\r\n\t{\r\n\t\treturn (\r\n\t\t\t<div className=\"w-100 h-100\">\r\n\t\t\t\t<img src={imageSource.getSceneImage(this.state.sceneID)} alt=\"Background Scene\"\r\n\t\t\t\t\tclassName=\"w-100 h-100\" onTouchMove={this.sceneTouchMoved}\r\n\t\t\t\t\tonTouchEnd={this.sceneTouchEnded}/>\r\n\t\t\t\t\t\r\n\t\t\t\t{this.state.stickers.map((sticker,index) => \r\n\t\t\t\t\t<Sticker stickerID={sticker} key={\"sticker-\" + index}/>\r\n\t\t\t\t)}\r\n\t\t\t\t\r\n\t\t\t\t<FloatingMenus sceneID={this.state.sceneID} onMenuItemClick={this.menuItemClicked}/>\r\n\t\t\t\t<FullScreenButton/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport StickyScene from \"./sticky-scene.js\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<StickyScene/>\n\t</React.StrictMode>,\n\tdocument.getElementById(\"stickySceneRoot\"));\n"],"sourceRoot":""}